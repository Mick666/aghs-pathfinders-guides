[{"/home/michael/React/aghs-pathfinders-guides/src/index.js":"1","/home/michael/React/aghs-pathfinders-guides/src/App.js":"2","/home/michael/React/aghs-pathfinders-guides/src/reportWebVitals.js":"3","/home/michael/React/aghs-pathfinders-guides/src/components/Main.js":"4","/home/michael/React/aghs-pathfinders-guides/src/Heroes.js":"5","/home/michael/React/aghs-pathfinders-guides/src/components/HeroList.js":"6","/home/michael/React/aghs-pathfinders-guides/src/components/GuideList.js":"7","/home/michael/React/aghs-pathfinders-guides/src/Guides.js":"8","/home/michael/React/aghs-pathfinders-guides/src/components/Guide.js":"9","/home/michael/React/aghs-pathfinders-guides/src/components/Header.js":"10","/home/michael/React/aghs-pathfinders-guides/src/Items.js":"11","/home/michael/React/aghs-pathfinders-guides/src/Abilities.js":"12","/home/michael/React/aghs-pathfinders-guides/src/Shards.js":"13","/home/michael/React/aghs-pathfinders-guides/src/components/AllGuidesPage.js":"14","/home/michael/React/aghs-pathfinders-guides/src/graphql/queries.js":"15","/home/michael/React/aghs-pathfinders-guides/src/graphql/fragments.js":"16","/home/michael/React/aghs-pathfinders-guides/src/components/CreateGuide.js":"17","/home/michael/React/aghs-pathfinders-guides/src/components/CreateItemGroups.js":"18","/home/michael/React/aghs-pathfinders-guides/src/components/FormikPremades.js":"19","/home/michael/React/aghs-pathfinders-guides/src/components/CreateGuideLevels.js":"20","/home/michael/React/aghs-pathfinders-guides/src/components/CreateGuideShardRanking.js":"21","/home/michael/React/aghs-pathfinders-guides/src/components/CreateGuideShardCombos.js":"22","/home/michael/React/aghs-pathfinders-guides/src/graphql/mutations.js":"23","/home/michael/React/aghs-pathfinders-guides/src/components/AllStats.js":"24","/home/michael/React/aghs-pathfinders-guides/src/utils/sortStats.js":"25","/home/michael/React/aghs-pathfinders-guides/src/components/ChangeLog.js":"26","/home/michael/React/aghs-pathfinders-guides/src/data/changeLog.js":"27","/home/michael/React/aghs-pathfinders-guides/src/components/RecentContent.js":"28","/home/michael/React/aghs-pathfinders-guides/src/components/HeroPage/index.js":"29","/home/michael/React/aghs-pathfinders-guides/src/components/HeroPage/HeroHeader.js":"30","/home/michael/React/aghs-pathfinders-guides/src/components/HeroPage/HeroStats.js":"31","/home/michael/React/aghs-pathfinders-guides/src/components/Footer.js":"32"},{"size":509,"mtime":1614457388402,"results":"33","hashOfConfig":"34"},{"size":1926,"mtime":1613909782921,"results":"35","hashOfConfig":"34"},{"size":396,"mtime":1610661749365,"results":"36","hashOfConfig":"34"},{"size":613,"mtime":1613921515928,"results":"37","hashOfConfig":"34"},{"size":45577,"mtime":1612957651493,"results":"38","hashOfConfig":"34"},{"size":736,"mtime":1613323287295,"results":"39","hashOfConfig":"34"},{"size":1892,"mtime":1612789519999,"results":"40","hashOfConfig":"34"},{"size":4766,"mtime":1611064370593,"results":"41","hashOfConfig":"42"},{"size":6663,"mtime":1613921751896,"results":"43","hashOfConfig":"34"},{"size":2251,"mtime":1612951260697,"results":"44","hashOfConfig":"34"},{"size":15171,"mtime":1611999272191,"results":"45","hashOfConfig":"34"},{"size":15000,"mtime":1611749518895,"results":"46","hashOfConfig":"34"},{"size":74607,"mtime":1612101141383,"results":"47","hashOfConfig":"34"},{"size":2234,"mtime":1612883009550,"results":"48","hashOfConfig":"34"},{"size":1685,"mtime":1612878725074,"results":"49","hashOfConfig":"34"},{"size":393,"mtime":1611362068572,"results":"50","hashOfConfig":"34"},{"size":6685,"mtime":1614455865046,"results":"51","hashOfConfig":"34"},{"size":4309,"mtime":1614457369162,"results":"52","hashOfConfig":"34"},{"size":3233,"mtime":1611650849336,"results":"53","hashOfConfig":"34"},{"size":5437,"mtime":1611855132192,"results":"54","hashOfConfig":"34"},{"size":2468,"mtime":1611650832316,"results":"55","hashOfConfig":"34"},{"size":4975,"mtime":1611661807940,"results":"56","hashOfConfig":"34"},{"size":761,"mtime":1611957397114,"results":"57","hashOfConfig":"34"},{"size":15221,"mtime":1614455504406,"results":"58","hashOfConfig":"34"},{"size":9949,"mtime":1612882180086,"results":"59","hashOfConfig":"34"},{"size":380,"mtime":1612299789059,"results":"60","hashOfConfig":"34"},{"size":3561,"mtime":1612264659550,"results":"61","hashOfConfig":"34"},{"size":3300,"mtime":1613560246233,"results":"62","hashOfConfig":"34"},{"size":2597,"mtime":1613921961520,"results":"63","hashOfConfig":"34"},{"size":2359,"mtime":1612789466143,"results":"64","hashOfConfig":"34"},{"size":6959,"mtime":1613921997228,"results":"65","hashOfConfig":"34"},{"size":2072,"mtime":1613920676696,"results":"66","hashOfConfig":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1hj3k8x",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"1ka3wz9",{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"107","usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":12,"source":"129","usedDeprecatedRules":"69"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"/home/michael/React/aghs-pathfinders-guides/src/index.js",[],[],"/home/michael/React/aghs-pathfinders-guides/src/App.js",[],"/home/michael/React/aghs-pathfinders-guides/src/reportWebVitals.js",[],[],"/home/michael/React/aghs-pathfinders-guides/src/components/Main.js",[],"/home/michael/React/aghs-pathfinders-guides/src/Heroes.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/HeroList.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/GuideList.js",[],"/home/michael/React/aghs-pathfinders-guides/src/Guides.js",[],[],"/home/michael/React/aghs-pathfinders-guides/src/components/Guide.js",["138"],"import React, { useState } from 'react'\n\nimport Items from '../Items'\nimport Abilities from '../Abilities'\nimport Heroes from '../Heroes'\nimport Shards from '../Shards'\n\nconst GuideLevels = ({ levels, selectedTalents, hero }) => {\n    //eslint-disable-next-line\n    const levelGrid = new Array(5).fill(null).map(_ => new Array(18).fill('blank'))\n    return (\n        <div>\n\n            <div className='levelGridParent'>\n                <h2 className='levelGridTitle'>Levels</h2>\n                {levelGrid.map((skill, skillKey) => {\n                    return (\n                        <div key={skillKey} className='skillRowParent'>\n                            <div>\n                                <img className='abilityImage' src={Abilities[hero.abilities[skillKey]].link} />\n                                <h4 className='abilityTitle'>{Abilities[hero.abilities[skillKey]].name}</h4>\n                            </div>\n                            <div className='skillRow'>\n                                {skill.map((level, levelKey) => {\n                                    return (\n                                        <div key={levelKey} className='levelCell'>\n                                            {levels[levelKey] === skillKey ?\n                                                <div className='selectedAbility'>{levelKey + 1}</div> :\n                                                null\n                                            }\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n            <div className='talentParent'>\n                <table className='talentTree'>\n                    <tbody>\n                        <tr>\n                            <th colSpan={3} className='talentHeader'>Talent Tree</th>\n                        </tr>\n                        {hero.talents.map((talentRow, key) => {\n                            return (\n                                <tr key={key} className='talentTableEls'>\n                                    <td className={`talentTableEls talentCell ${talentRow[selectedTalents[key]] === talentRow[0] ? 'talentSelected' : ''}`}>\n                                        {talentRow[0]}\n                                    </td>\n                                    <td className={`talentTableEls talentMiddle talentLevel${key}`}>\n                                        {talentRow[1]}\n                                    </td>\n                                    <td className={`talentTableEls talentCell ${talentRow[selectedTalents[key]] === talentRow[2] ? 'talentSelected' : ''}`}>\n                                        {talentRow[2]}\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nconst ShardRankings = ({ shards }) => {\n    return (\n        <div className='shardRankings'>\n            {shards.map((shard, key) => {\n                return (\n                    <div key={key} className='shardRankingParent'>\n                        <img src={Abilities[Shards[shard].skill].link} className='shardImage' />\n                        <div>\n                            <h3 className='shardTitle' >{Shards[shard].name}</h3>\n                            <div className='shardDescription' >{Shards[shard].description}</div>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nconst ShardCombos = ({ shardCombos }) => {\n    if (!shardCombos) return (\n        <div className='shardCombinationParent'>\n            No shard combinations listed so far: Why not suggest one?\n        </div>\n    )\n    return (\n        <div>\n            {shardCombos.map((combos, key) => {\n                return (\n                    <div key={key} className='shardCombo'>\n                        <div className='shardComboDescription'>{combos.description}</div>\n                        <div className='shardComboCell'>\n                            {combos.combination.map((shard, key) => {\n                                return (\n                                    <div key={key} className='shardComboShard'>\n                                        <img src={Abilities[Shards[shard].skill].link} className='shardComboImage' />\n                                        <h3 className='shardComboTitle shardTitle' >{Shards[shard].name}</h3>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nconst GuideSegment = ({ section }) => {\n    return (\n        <div className='guideSection'>\n            <div className='guideSectionTitle'>{section.groupName}</div>\n            <div className='guideItems'>\n                {section.items.map((x, key) => {\n                    return (<div key={key} className='itemCell'>\n                        <img\n                            src={Items[x].link}\n                            className='itemIcon'\n                        />\n                        <div className='itemText'>{Items[x].name}</div>\n                    </div>\n                    )\n                })}\n            </div>\n            <span className='guideSectionBackground' />\n        </div>\n    )\n}\n\nconst Guide = ({ guide, currentTab }) => {\n    if (!guide) {\n        return <div className='displayedGuide'>No guides available</div>\n    }\n\n    const hero = Heroes.filter(x => x.id === guide.hero)[0]\n\n\n    return (\n        <div className='displayedGuide'>\n            <div style={{ display: currentTab === 'Items & Levelling' ? '' : 'none' }}>\n                <h2 className='levelGridTitle'>Items</h2>\n                <div className='itemGroupContainer'>\n                    {guide.itemGroups.map((group, key) => <GuideSegment key={key} section={group} />)}\n                </div>\n                <GuideLevels levels={guide.levels} selectedTalents={guide.selectedTalents} hero={hero} />\n            </div>\n            <div style={{ display: currentTab === 'Legendary Shards Ranking' ? '' : 'none' }}>\n                <ShardRankings shards={guide.shards} />\n            </div>\n            <div style={{ display: currentTab === 'Shard combinations' ? '' : 'none' }}>\n                <ShardCombos shardCombos={guide.shardCombinations} />\n            </div>\n        </div>\n    )\n}\n\nexport default Guide","/home/michael/React/aghs-pathfinders-guides/src/components/Header.js",[],"/home/michael/React/aghs-pathfinders-guides/src/Items.js",[],"/home/michael/React/aghs-pathfinders-guides/src/Abilities.js",[],"/home/michael/React/aghs-pathfinders-guides/src/Shards.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/AllGuidesPage.js",[],"/home/michael/React/aghs-pathfinders-guides/src/graphql/queries.js",[],"/home/michael/React/aghs-pathfinders-guides/src/graphql/fragments.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/CreateGuide.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/CreateItemGroups.js",["139","140"],"import React from 'react'\n\nimport Items from '../Items'\nimport { FormikInput } from './FormikPremades'\nimport SelectSearch from 'react-select-search'\n\nconst AddItemsSearch = ({ setItems, items, groupName }) => {\n    const itemValues = Object.entries(Items).map(item => {\n        return { name: item[1].name, value: item[0], link: item[1].link }\n    })\n\n    function renderItemSearch(props, option, snapshot, className) {\n        const imgStyle = {\n            borderRadius: '50%',\n            verticalAlign: 'middle',\n            marginRight: 10,\n        }\n\n        return (\n            <button {...props} className={className} type=\"button\" value={option.value}>\n                <span><img alt=\"\" style={imgStyle} width=\"32\" height=\"32\" src={option.link} /><span>{option.name}</span></span>\n            </button>\n        )\n    }\n\n\n    function addItem(value) {\n        const updatedSection = items.filter(section => section.groupName === groupName)[0]\n        updatedSection.items = updatedSection.items.concat(value)\n        setItems(items.map(item => item.groupName === groupName ? updatedSection : item))\n    }\n\n    return (\n        <SelectSearch\n            className=\"select-search select-search--multiple select-parent\"\n            options={itemValues}\n            renderOption={renderItemSearch}\n            search\n            placeholder=\"Add items\"\n            onChange={addItem}\n        />\n    )\n\n}\n\nconst GuideCreationSegment = ({ section, items, setItems }) => {\n\n    function deleteItem(sectionToModify, key) {\n        const sectionWithoutItem = { ...sectionToModify }\n        sectionWithoutItem.items.splice(key, 1)\n        setItems(items.map(group => group.groupName === sectionWithoutItem.groupName ? sectionWithoutItem : group))\n    }\n\n    function deleteSection(sectionName) {\n        setItems(items.filter(item => item.groupName !== sectionName))\n    }\n\n    return (\n        <div style={{ maxHeight: '180px', position: 'relative'}} className='flexRow'>\n            <div className='guideSection createGuideItemSection'>\n                <div className='guideSectionTitle'>{section.groupName}</div>\n                <div className='guideItems'>\n                    {section.items.map((x, key) => {\n                        return (\n                            <div key={key} className='itemCell'>\n                                <img\n                                    src={Items[x].link}\n                                    className='itemIcon'\n                                />\n                                <div className='itemText'>{Items[x].name}</div>\n                                <button className='removeItemButton' onClick={() => deleteItem(section, key)}  >X</button>\n                            </div>\n                        )\n                    })}\n                </div>\n\n                <button className='removeItemButton' onClick={() => deleteSection(section.groupName)}  >X</button>\n                <span className='guideSectionBackground' />\n            </div>\n            <div style={{ overflow: 'visible'}}>\n                <AddItemsSearch groupName={section.groupName} items={items} setItems={setItems} />\n            </div>\n        </div>\n    )\n}\n\nconst CreateItemGroups = ({ items, setItems }) => {\n\n    function addSegment(event) {\n        setItems(items.concat({ groupName: event.inputValue, items: [] }))\n    }\n\n    return (\n        <div className='guideItems flexColumn'>\n            <div className='centerText flexColumn'>\n                <h2 className='centerText bottomSpacing'>Items</h2>\n                <div className='bottomSpacing'>Type a section name in, then click the button</div>\n                <div className='bottomSpacing'>Then add as many items as needed to a section</div>\n                <div className='guideListDetails'>\n                    <div style={{ marginTop: '25px' }} className='rightSpacing'>Section name:</div>\n                    <FormikInput onSubmit={addSegment} buttonText='Add Section' uniqueValues={items.map(x => x.groupName)} />\n                </div>\n            </div>\n            <div className='flexColumn'>\n                {items.map((section, key) => <GuideCreationSegment key={key} section={section} items={items} setItems={setItems} />)}\n            </div>\n        </div>\n    )\n}\n\nexport default CreateItemGroups","/home/michael/React/aghs-pathfinders-guides/src/components/FormikPremades.js",[],[],"/home/michael/React/aghs-pathfinders-guides/src/components/CreateGuideLevels.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/CreateGuideShardRanking.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/CreateGuideShardCombos.js",[],"/home/michael/React/aghs-pathfinders-guides/src/graphql/mutations.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/AllStats.js",[],"/home/michael/React/aghs-pathfinders-guides/src/utils/sortStats.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/ChangeLog.js",[],"/home/michael/React/aghs-pathfinders-guides/src/data/changeLog.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/RecentContent.js",["141","142","143","144","145","146","147","148","149","150","151","152"],"import React, { useState } from 'react'\nimport { useQuery } from '@apollo/client'\nimport { ALL_GUIDES } from '../graphql/queries'\nimport { Loader } from 'semantic-ui-react'\nimport { heroNames } from '../Heroes'\nimport { Link } from 'react-router-dom'\n\nexport const MainGuides = () => {\n    const guides = useQuery(ALL_GUIDES)\n    const [currentTab, setCurrentTab] = useState('new')\n\n    return (\n        <div className='recentContentContainer recentGuides'>\n            <div className='recentGuidesTabs'>\n                <div className='recentGuidesTab' id='recentGuidesTitle'>PATHFINDERS GUIDES</div>\n                <div\n                    className={`recentGuidesTab ${currentTab === 'new' ? 'active' : ''}`}\n                    id='recentGuidesNewest'\n                    onClick={() => setCurrentTab('new')}\n                >\n                    Newest\n                </div>\n                <div\n                    className={`recentGuidesTab ${currentTab === 'top' ? 'active' : ''}`}\n                    id='recentGuidesTop'\n                    onClick={() => setCurrentTab('top')}\n                >\n                    Top\n                </div>\n            </div>\n            <div className='recentGuidesContainer'>\n                {guides.loading ? <Loader active inverted>Loading</Loader> : [...guides.data.allGuides]\n                .sort((a, b) => new Date(b.createdAt.replace(/^([0-9]{2})\\/([0-9]{2})\\//, '$2/$1/')) - new Date(a.createdAt.replace(/^([0-9]{2})\\/([0-9]{2})\\//, '$2/$1/')))\n                .slice(0, 3).map((guide, key) => {\n                    return (\n                        <Link key={key} className='recentGuideIndiv cleanLink' to={`/heroes/${guide.hero}/${guide.id}`}>\n                            <img src={heroNames[guide.hero].image} className='recentGuideImage' />\n                            <div className='recentGuideDetails'>\n                                <div className='recentGuideTitle'>{guide.title}</div>\n                                <div>Created on: {guide.createdAt}</div>\n                            </div>\n                        </Link>\n                    )\n                })}\n            </div>\n            <div className='topGuidesContainer hidden'>\n                {guides.loading ? <Loader active inverted>Loading</Loader> : null}\n            </div>\n        </div>\n    )\n}\n\nexport const MainGames = () => {\n    const [currentTab, setCurrentTab] = useState('new')\n\n    return (\n        <div className='recentContentContainer recentGuides'>\n            <div className='recentGuidesTabs'>\n                <div className='recentGuidesTab' id='recentGuidesTitle'>VICTORIOUS GAMES</div>\n                <div\n                    className={`recentGuidesTab ${currentTab === 'new' ? 'active' : ''}`}\n                    id='recentGuidesNewest'\n                    onClick={() => setCurrentTab('new')}\n                >\n                    Newest\n                </div>\n                <div\n                    className={`recentGuidesTab ${currentTab === 'top' ? 'active' : ''}`}\n                    id='recentGuidesTop'\n                    onClick={() => setCurrentTab('top')}\n                >\n                    Top\n                </div>\n            </div>\n            <div id='placeholderGames'>Coming soon!</div>\n        </div>\n    )\n}\n\n","/home/michael/React/aghs-pathfinders-guides/src/components/HeroPage/index.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/HeroPage/HeroHeader.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/HeroPage/HeroStats.js",[],"/home/michael/React/aghs-pathfinders-guides/src/components/Footer.js",[],{"ruleId":"153","severity":1,"message":"154","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":59,"column":63,"nodeType":"159","messageId":"160","endLine":59,"endColumn":64,"fix":"161"},{"ruleId":"157","severity":1,"message":"158","line":80,"column":46,"nodeType":"159","messageId":"160","endLine":80,"endColumn":47,"fix":"162"},{"ruleId":"163","severity":1,"message":"164","line":33,"column":1,"nodeType":"165","messageId":"166","endLine":33,"endColumn":17,"fix":"167"},{"ruleId":"163","severity":1,"message":"164","line":34,"column":1,"nodeType":"165","messageId":"166","endLine":34,"endColumn":17,"fix":"168"},{"ruleId":"163","severity":1,"message":"169","line":35,"column":1,"nodeType":"170","messageId":"166","endLine":35,"endColumn":21,"fix":"171"},{"ruleId":"163","severity":1,"message":"172","line":36,"column":1,"nodeType":"165","messageId":"166","endLine":36,"endColumn":25,"fix":"173"},{"ruleId":"163","severity":1,"message":"174","line":37,"column":1,"nodeType":"165","messageId":"166","endLine":37,"endColumn":29,"fix":"175"},{"ruleId":"163","severity":1,"message":"174","line":38,"column":1,"nodeType":"165","messageId":"166","endLine":38,"endColumn":29,"fix":"176"},{"ruleId":"163","severity":1,"message":"177","line":39,"column":1,"nodeType":"165","messageId":"166","endLine":39,"endColumn":33,"fix":"178"},{"ruleId":"163","severity":1,"message":"177","line":40,"column":1,"nodeType":"165","messageId":"166","endLine":40,"endColumn":33,"fix":"179"},{"ruleId":"163","severity":1,"message":"174","line":41,"column":1,"nodeType":"165","messageId":"166","endLine":41,"endColumn":29,"fix":"180"},{"ruleId":"163","severity":1,"message":"172","line":42,"column":1,"nodeType":"165","messageId":"166","endLine":42,"endColumn":25,"fix":"181"},{"ruleId":"163","severity":1,"message":"169","line":43,"column":1,"nodeType":"165","messageId":"166","endLine":43,"endColumn":21,"fix":"182"},{"ruleId":"163","severity":1,"message":"164","line":44,"column":1,"nodeType":"165","messageId":"166","endLine":44,"endColumn":17,"fix":"183"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","object-curly-spacing","A space is required before '}'.","ObjectExpression","requireSpaceBefore",{"range":"184","text":"185"},{"range":"186","text":"185"},"indent","Expected indentation of 20 spaces but found 16.","Punctuator","wrongIndentation",{"range":"187","text":"188"},{"range":"189","text":"188"},"Expected indentation of 24 spaces but found 20.","Keyword",{"range":"190","text":"191"},"Expected indentation of 28 spaces but found 24.",{"range":"192","text":"193"},"Expected indentation of 32 spaces but found 28.",{"range":"194","text":"195"},{"range":"196","text":"195"},"Expected indentation of 36 spaces but found 32.",{"range":"197","text":"198"},{"range":"199","text":"198"},{"range":"200","text":"195"},{"range":"201","text":"193"},{"range":"202","text":"191"},{"range":"203","text":"188"},[1949,1949]," ",[3048,3048],[1331,1347],"                    ",[1504,1520],[1555,1575],"                        ",[1584,1608],"                            ",[1705,1733],"                                ",[1804,1832],[1869,1901],"                                    ",[1955,1987],[2028,2056],[2063,2087],[2095,2115],[2117,2133]]